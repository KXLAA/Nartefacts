name: CI

on:
  pull_request:
    branches:
      - main
      - dev
    paths:
      - '**.js'
      - '**.jsx'
      - '**.ts'
      - '**.tsx'
      - '**.yml'
      - '**.json'


concurrency: 
  group: ${{ github.head_ref }}
  cancel-in-progress: true

jobs:
  # Install yarn & cypress dependencies & cache them
  install-cache: 
    runs-on: ubuntu-latest
    strategy:
      matrix: 
        node-version: [16]
    steps:
      - name: Checkout Commit
        uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node }}
      - name: Cache yarn dependencies
        uses: actions/cache@v2
        id: cache-dependencies
        with: 
          path: node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys:
            ${{ runner.os }}-yarn-
      - name: Cache Cypress binary
        uses: actions/cache@v2
        id: cache-cypress-binary
        with:
          path: ~/.cache/Cypress
          key: cypress-binary-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            cypress-binary-
      - name: Install Dependencies
        if: steps.cache-dependencies.outputs.cache-hit != 'true' || steps.cache-cypress-binary.outputs.cache-hit != 'true'
        run: |
          yarn install --force --non-interactive

  # Cache next build
  cache-next-build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: [16]
    needs: install-cache
    steps:
      - name: Checkout Commit
        uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node }}
      - name: Restore yarn dependencies
        uses: actions/cache@v2
        id: cache-dependencies
        with:
          path: node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Cache next build
        uses: actions/cache@v2
        id: cache-next-build
        with:
          path: ${{ github.workspace }}/.next/cache
          key: next-build-${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            next-build-
      - name: Build
        if: steps.cache-next-build.outputs.cache-hit != 'true'
        run: |
          yarn build
     
   # Prettier & Eslint
  lint-format:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: [16]
    needs: install-cache
    steps:
      - name: Checkout Commit
        uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node }}
      - name: Restore yarn dependencies
        uses: actions/cache@v2
        id: cache-dependencies
        with:
          path: node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Run lint
        run: |
          yarn lint
      - name: Run prettier
        run: |
          yarn format
  

  # Type Check PR
  type-check:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: [16]
    needs: install-cache
    steps:
      - name: Checkout Commit
        uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node }}
      - name: Restore yarn dependencies
        uses: actions/cache@v2
        id: cache-dependencies
        with:
          path: node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Check types
        run: |
          yarn type-check
  
  # Run Unit Tests
  unit-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: [16]
    needs: install-cache
    steps:
      - name: Checkout Commit
        uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node }}
      - name: Create env file
        run: |
          touch .env
          echo DATABASE_URL=${DATABASE_URL} > .env
          cat .env
        # env: 
        #   DATABASE_URL: ${{ secrets.DATABASE_URL }} 
      - name: Restore yarn dependencies
        uses: actions/cache@v2
        id: cache-dependencies
        with:
          path: node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Run test
        run: |
          yarn test
        env: 
          DATABASE_URL: ${{ secrets.DATABASE_URL }} 
  
  # Build application
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: [16]
    needs: [lint-format, type-check, unit-test]
    steps:
      - name: Checkout Commit
        uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node }}
      - name: Restore yarn dependencies
        uses: actions/cache@v2
        id: cache-dependencies
        with:
          path: node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Restore Next builds
        uses: actions/cache@v2
        id: cache-next-build
        with:
          path: ${{ github.workspace }}/.next/cache
          key: next-build-${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            next-build-
      - name: Run build
        run: |
           yarn build
      - name: Upload build artifacts
        uses: actions/upload-artifact@v2
        with:
          name: build-output
          path: .next
          retention-days: 1
  # e2e-tests-chrome:
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:
  #       node: [16]
  #   needs: build
  #   steps:
  #     - name: Checkout Commit
  #       uses: actions/checkout@v2
  #     - name: Use Node.js ${{ matrix.node }}
  #       uses: actions/setup-node@v1
  #       with:
  #         node-version: ${{ matrix.node }}
  #     - name: Restore yarn dependencies
  #       uses: actions/cache@v2
  #       id: cache-dependencies
  #       with:
  #         path: node_modules
  #         key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
  #         restore-keys: |
  #           ${{ runner.os }}-yarn-
  #     - name: Restore Cypress binary
  #       id: cache-cypress-binary
  #       uses: actions/cache@v2
  #       with:
  #         path: ~/.cache/Cypress
  #         key: cypress-binary-${{ hashFiles('**/yarn.lock') }}
  #         restore-keys: |
  #           cypress-binary-
  #     - name: Download build artifacts
  #       uses: actions/download-artifact@v2
  #       with:
  #         name: build-output
  #         path: .next
  #     - name: Run cypress
  #       uses: cypress-io/github-action@v4.1.0
  #       with:
  #         start: yarn start
  #         browser: chrome
  #         headless: true
  #         install: false
  # e2e-tests-firefox:
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:
  #       node: [16]
  #   needs: build
  #   steps:
  #     - name: Checkout Commit
  #       uses: actions/checkout@v2
  #     - name: Use Node.js ${{ matrix.node }}
  #       uses: actions/setup-node@v1
  #       with:
  #         node-version: ${{ matrix.node }}
  #     - name: Restore yarn dependencies
  #       uses: actions/cache@v2
  #       id: cache-dependencies
  #       with:
  #         path: node_modules
  #         key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
  #         restore-keys: |
  #           ${{ runner.os }}-yarn-
  #     - name: Restore Cypress binary
  #       id: cache-cypress-binary
  #       uses: actions/cache@v2
  #       with:
  #         path: ~/.cache/Cypress
  #         key: cypress-binary-${{ hashFiles('**/yarn.lock') }}
  #         restore-keys: |
  #           cypress-binary-
  #     - name: Download build artifacts
  #       uses: actions/download-artifact@v2
  #       with:
  #         name: build-output
  #         path: .next
  #     - name: Run cypress
  #       uses: cypress-io/github-action@v4.1.0
  #       with:
  #         start: yarn start
  #         browser: firefox
  #         headless: true
  #         install: false