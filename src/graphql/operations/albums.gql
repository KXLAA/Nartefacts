fragment ArtistItem on Artist {
  name
  photoURL
}

fragment AlbumItem on Album {
  id
  albumArt
  type
  artist {
    ...ArtistItem
  }
  colors
  likeCount
  title
  type
  urls {
    spotify
    apple
  }
}

query Album($id: ID!) {
  oneAlbum(id: $id) {
    ...AlbumItem
  }
}

query AllAlbums($first: Int, $after: String) {
  allAlbums(first: $first, after: $after) {
    edges {
      cursor
      node {
        ...AlbumItem
      }
    }
    node {
      ...AlbumItem
    }
    pageInfo {
      endCursor
      hasNextPage
    }
  }
}

query AlbumsByType($type: String!, $first: Int, $after: String) {
  albumsByType(type: $type, first: $first, after: $after) {
    edges {
      cursor
      node {
        ...AlbumItem
      }
    }
    node {
      ...AlbumItem
    }
    pageInfo {
      endCursor
      hasNextPage
    }
  }
}

query AlbumsByTitle($title: String!, $first: Int, $after: String) {
  albumsByTitle(title: $title, first: $first, after: $after) {
    edges {
      cursor
      node {
        ...AlbumItem
      }
    }
    node {
      ...AlbumItem
    }
    pageInfo {
      endCursor
      hasNextPage
    }
  }
}

query Analytics {
  analytics {
    id
    generatedPalettes
  }
}

mutation UpdateAnalytics($id: ID!) {
  updateAnalytics(id: $id) {
    id
    generatedPalettes
  }
}

mutation GenerateColors($imageUrl: String!) {
  generateColors(imageUrl: $imageUrl) {
    colors
  }
}

mutation AddToLike($albumId: ID!) {
  addToLike(albumID: $albumId)
}

mutation RemoveFromLike($albumId: ID!) {
  removeFromLike(albumID: $albumId)
}

mutation AddAlbum($input: AlbumInput) {
  addAlbum(input: $input) {
    ...AlbumItem
  }
}

mutation UpdateAlbum($albumId: ID!, $input: AlbumInput) {
  updateAlbum(albumID: $albumId, input: $input) {
    ...AlbumItem
  }
}

mutation DeleteAlbum($albumId: ID!) {
  deleteAlbum(albumID: $albumId)
}

mutation LogIn($password: String!, $username: String!) {
  logIn(password: $password, username: $username)
}
